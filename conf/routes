# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index

# auth
POST    /login                      controllers.Application.login
GET     /logout                     controllers.Application.logout

# sign up
GET     /newuser                    controllers.Application.newuser
POST    /signup                     controllers.Application.signup
GET     /facebook                   controllers.ExternalAuthentication.facebook
GET     /google                     controllers.ExternalAuthentication.google

# user management
GET    /recover                     controllers.Application.recoverPassword
POST    /recover                    controllers.Application.recoverPassword
GET    /user/preferences            controllers.Application.settings
POST   /user/preferences            controllers.Application.settings

# generic survey routes
GET    /dashboard                     controllers.Surveys.dashboard
GET    /surveys/:id/data              controllers.Interview.data(id: String)
GET    /surveys/:id/responses         controllers.Interview.dataAsJson(id: String)
GET    /surveys/:id/export            controllers.Interview.export(id: String)

# survey CRUD
GET   /surveys/new                    controllers.Surveys.newsurvey
POST   /surveys/create                controllers.Surveys.create
POST   /surveys/:id/update            controllers.Surveys.update(id: String)
GET   /surveys/:id/editinfo           controllers.Surveys.editinfo(id: String)
GET    /surveys/:id/edit              controllers.Surveys.edit(id: String)
POST   /surveys/:id/updateinfo        controllers.Surveys.updateinfo(id: String)
GET    /surveys/:id/close             controllers.Surveys.close(id: String)
GET    /surveys/:id/makecopy/:name    controllers.Surveys.copy(id: String, name: String)

# view survey
GET    /surveys/:id/preview           controllers.Surveys.preview(id: String)
POST    /surveys/:id/preview          controllers.Surveys.preview(id: String)
GET    /surveys/:id/start             controllers.Interview.response(id: String, rid: String = null)
POST    /surveys/:id/start            controllers.Interview.response(id: String, rid: String = null)
GET    /surveys/:id/block             controllers.Interview.reportAbuseById(id: String)
GET    /surveys/:id/:rid/start        controllers.Interview.response(id: String, rid: String)
POST    /surveys/:id/:rid/start       controllers.Interview.response(id: String, rid: String)
GET    /surveys/:id/flow              controllers.Surveys.flow(id: String)
POST   /surveys/:id/updateflow        controllers.Surveys.updateflow(id: String)
POST    /surveys/:id/flow             controllers.Surveys.flow(id: String)
GET    /surveys/:id/collaborate       controllers.Surveys.collaborate(id: String)
POST    /surveys/:id/collaborate      controllers.Surveys.collaborate(id: String)
GET    /surveys/:id/pdf               controllers.Surveys.export(id: String)

GET    /surveys/questions/:id/:qId    controllers.Surveys.questions(id: String, qId: String)

# Delete a survey / data 
GET    /surveys/:id/delete            controllers.Surveys.delete(id: String)
GET    /surveys/:id/flush             controllers.Surveys.flush(id: String)

GET    /surveys/:id/template/:tid     controllers.Surveys.template(id: String, tid: String)
GET    /surveys/:id/invite            controllers.Participants.invite(id: String)
POST    /surveys/:id/email            controllers.Participants.email(id: String)

# reports
GET   /reports/:id                    controllers.Reports.start(id: String)
POST  /reports/:id                    controllers.Reports.build(id: String)

# Address Book
GET   /addressbook                    controllers.Addresses.show
GET   /addressbook/open               controllers.Addresses.open
POST  /addressbook/update             controllers.Addresses.update

GET   /uriexists/:uri                 controllers.Surveys.uriexists(uri: String)
GET   /downloadSurvey/:id             controllers.Interview.downloadSurvey(id: String, attr: String = "surveyId", rid: String = null)
GET   /downloadSurvey/:id/:rid        controllers.Interview.downloadSurvey(id: String, attr: String = "surveyId", rid: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

GET     /:company                     controllers.Interview.customUriResponse(company: String, rid: String = null)
POST    /:company                     controllers.Interview.customUriResponse(company: String, rid: String = null)

GET   /:company/offline               controllers.Interview.downloadSurvey(company: String, attr: String = "uri", rid: String = null)
GET   /:company/:rid/offline          controllers.Interview.downloadSurvey(company: String, attr: String = "uri", rid: String)
GET     /:company/:rid                controllers.Interview.customUriResponse(company: String, rid: String)
POST    /:company/:rid                controllers.Interview.customUriResponse(company: String, rid: String)
